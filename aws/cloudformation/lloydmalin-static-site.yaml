AWSTemplateFormatVersion: '2010-09-09'
Description: >
  Static website with CloudFront (OAC) + ACM + Route 53 using an existing private S3 bucket.
  Deploy this stack in us-east-1. It will: request/validate an ACM cert via Route 53,
  create a CloudFront distribution that reads from your private bucket via OAC,
  attach a bucket policy allowing only that distribution, and create Route 53 A/AAAA aliases.

Parameters:
  DomainName:
    Type: String
    Description: Apex domain (e.g., lloydmalin.com)
  HostedZoneId:
    Type: String
    Description: Route 53 Hosted Zone ID that matches DomainName (e.g., Z123EXAMPLE)
  BucketName:
    Type: String
    Description: Name of the existing S3 bucket that holds your site (must already exist)
  BucketRegion:
    Type: String
    Default: us-west-2
    Description: Region where your existing S3 bucket resides (e.g., us-west-2). Use 'us-east-1' if LocationConstraint is null.
  EnableWWW:
    Type: String
    AllowedValues: ["true", "false"]
    Default: "true"
    Description: Create DNS and certificate for www.DomainName in addition to the apex?

Conditions:
  UseWWW: !Equals [!Ref EnableWWW, "true"]

Resources:
  Certificate:
    Type: AWS::CertificateManager::Certificate
    Properties:
      DomainName: !Ref DomainName
      ValidationMethod: DNS
      SubjectAlternativeNames: !If
        - UseWWW
        - [!Sub "www.${DomainName}"]
        - !Ref "AWS::NoValue"
      DomainValidationOptions:
        - DomainName: !Ref DomainName
          HostedZoneId: !Ref HostedZoneId
        - !If
          - UseWWW
          -
            DomainName: !Sub "www.${DomainName}"
            HostedZoneId: !Ref HostedZoneId
          - !Ref "AWS::NoValue"

  OriginAccessControl:
    Type: AWS::CloudFront::OriginAccessControl
    Properties:
      OriginAccessControlConfig:
        Name: !Sub "${DomainName}-oac"
        Description: !Sub "OAC for ${DomainName}"
        OriginAccessControlOriginType: s3
        SigningBehavior: always
        SigningProtocol: sigv4

  Distribution:
    Type: AWS::CloudFront::Distribution
    Properties:
      DistributionConfig:
        Enabled: true
        IPV6Enabled: true
        PriceClass: PriceClass_100
        DefaultRootObject: index.html
        Aliases: !If
          - UseWWW
          - [!Ref DomainName, !Sub "www.${DomainName}"]
          - [!Ref DomainName]
        Origins:
          - Id: s3origin
            DomainName: !Sub "${BucketName}.s3.${BucketRegion}.amazonaws.com"
            S3OriginConfig: {}
            OriginAccessControlId: !Ref OriginAccessControl
        DefaultCacheBehavior:
          TargetOriginId: s3origin
          ViewerProtocolPolicy: redirect-to-https
          AllowedMethods: [GET, HEAD]
          CachedMethods: [GET, HEAD]
          Compress: true
          CachePolicyId: 658327ea-f89d-4fab-a63d-7e88639e58f6
        CustomErrorResponses:
          - ErrorCode: 404
            ResponseCode: 200
            ResponsePagePath: /index.html
            ErrorCachingMinTTL: 0
        ViewerCertificate:
          AcmCertificateArn: !Ref Certificate
          SslSupportMethod: sni-only
          MinimumProtocolVersion: TLSv1.2_2021

  BucketPolicy:
    Type: AWS::S3::BucketPolicy
    DependsOn: Distribution
    Properties:
      Bucket: !Ref BucketName
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Sid: AllowCloudFrontOACRead
            Effect: Allow
            Principal:
              Service: cloudfront.amazonaws.com
            Action: s3:GetObject
            Resource: !Sub "arn:${AWS::Partition}:s3:::${BucketName}/*"
            Condition:
              StringEquals:
                AWS:SourceArn: !Sub "arn:${AWS::Partition}:cloudfront::${AWS::AccountId}:distribution/${Distribution}"

  ApexA:
    Type: AWS::Route53::RecordSet
    Properties:
      HostedZoneId: !Ref HostedZoneId
      Name: !Ref DomainName
      Type: A
      AliasTarget:
        DNSName: !GetAtt Distribution.DomainName
        HostedZoneId: Z2FDTNDATAQYW2
        EvaluateTargetHealth: false

  ApexAAAA:
    Type: AWS::Route53::RecordSet
    Properties:
      HostedZoneId: !Ref HostedZoneId
      Name: !Ref DomainName
      Type: AAAA
      AliasTarget:
        DNSName: !GetAtt Distribution.DomainName
        HostedZoneId: Z2FDTNDATAQYW2
        EvaluateTargetHealth: false

  WwwA:
    Type: AWS::Route53::RecordSet
    Condition: UseWWW
    Properties:
      HostedZoneId: !Ref HostedZoneId
      Name: !Sub "www.${DomainName}"
      Type: A
      AliasTarget:
        DNSName: !GetAtt Distribution.DomainName
        HostedZoneId: Z2FDTNDATAQYW2
        EvaluateTargetHealth: false

  WwwAAAA:
    Type: AWS::Route53::RecordSet
    Condition: UseWWW
    Properties:
      HostedZoneId: !Ref HostedZoneId
      Name: !Sub "www.${DomainName}"
      Type: AAAA
      AliasTarget:
        DNSName: !GetAtt Distribution.DomainName
        HostedZoneId: Z2FDTNDATAQYW2
        EvaluateTargetHealth: false

Outputs:
  DistributionId:
    Description: CloudFront Distribution ID
    Value: !Ref Distribution
  DistributionDomainName:
    Description: CloudFront domain for your site
    Value: !GetAtt Distribution.DomainName
  CertificateArn:
    Description: ACM certificate ARN (in us-east-1)
    Value: !Ref Certificate
